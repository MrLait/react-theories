Parameters:
  EC2InstanceName:
    Description: Ec2 instance name
    Type: String
    Default: CloudFormationWithCodeDeployEc2Instance

  CodeDeployApplicationName:
    Description: CodeDeploy application name
    Type: String
    Default: CloudFormationWithCodeDeployApplicationName

  CodeDeployGroupName:
    Description: CodeDeploy group name
    Type: String
    Default: CloudFormationWithCodeDeployGroupName

  BucketRevisionLocation:
    Description: Copy and paste the Amazon S3 bucket where your revision is stored
    Type: String
    Default: target/my-app.zip

  CodePipelineName:
    Description: Enter the pipeline name. You cannot edit the pipeline name after it is created.
    Type: String
    Default: CloudFormationWithCodePipelineName

  CodePipelineServicePolicyName:
    Description: Enter the policy name.
    Type: String
    Default: CloudFormationWithCodePipelinePolicyName

  VpcId:
    Description: Please choose vpcId
    Type: "AWS::EC2::VPC::Id"
    Default: vpc-0f88a44b9efbd56e0

  ImagesId:
    Description: Image id
    Type: "AWS::EC2::Image::Id"
    Default: ami-007855ac798b5175e

  InstanceTypes:
    Description: Instance type
    Type: String
    Default: t2.micro

  Subnets:
    Description: Please choose Subnet
    Type: "AWS::EC2::Subnet::Id"
    Default: ""

  KeyNames:
    Description: Please choose KeyName
    Type: "AWS::EC2::KeyPair::KeyName"
    Default: lait-33

  BucketName:
    Type: String
    Description: The name of the S3 bucket for CodeDeploy artifacts.
    Default: codedeploy-solution-bucket

  ThumbprintList:
    Type: String
    Default: 6938fd4d98bab03faadb97b34396831e3780aea1
    Description: A thumbprint of an Open ID Connector is a SHA1 hash of the public certificate of the host

  GithubRepoName:
    Type: String
    Description: GitHub repository name Ex-TestUser/TestCodeDeploy
    Default: MrLait/aws-deploy-ci-cd-pipeline

  GithubRepoBrunch:
    Type: String
    Description: GitHub repository brunch
    Default: develop

Resources:
  EC2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforAWSCodeDeploy
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  CloudFormationCodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codedeploy.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole

  CloudFormationCodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: codepipeline.amazonaws.com
      Path: "/"
      Policies:
        PolicyName: !Ref CodePipelineServicePolicyName
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Action:
                - codedeploy:CreateDeployment
                - codedeploy:GetApplication
                - codedeploy:GetApplicationRevision
                - codedeploy:GetDeployment
                - codedeploy:GetDeploymentConfig
                - codedeploy:RegisterApplicationRevision
              Resource: "*"
              Effect: Allow
            - Action:
                - ec2:*
                - s3:*
              Resource: "*"
              Effect: Allow

  IDCProvider:
    Type: AWS::IAM::OIDCProvider
    Properties:
      Url: "https://token.actions.githubusercontent.com"
      ClientIdList:
        - "sts.amazonaws.com"
      ThumbprintList:
        - !Ref ThumbprintList

  CloudFormationGithubActionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !Ref IDCProvider
            Condition:
              ForAllValues:StringEquals:
                token.actions.githubusercontent.com:aud: sts.amazonaws.com
                token.actions.githubusercontent.com:sub:
                  - !Sub "repo:${GithubRepoName}:ref:refs/heads/${GithubRepoBrunch}"
                  - repo:MrLait/aws-deploy-ci-cd-pipeline:ref:refs/heads/master
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess

  Ec2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EC2InstanceRole

  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: !Ref CodeDeployApplicationName

  WebappDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      DeploymentGroupName: !Ref CodeDeployGroupName
      ApplicationName: !Ref CodeDeployApplicationName
      ServiceRoleArn: !GetAtt CloudFormationCodeDeployRole.Arn
      DeploymentConfigName: CodeDeployDefault.OneAtATime
      Ec2TagFilters:
        - Key: Name
          Value: !Ref EC2InstanceName
          Type: "KEY_AND_VALUE"
      AutoRollbackConfiguration:
        Enabled: true
        Events:
          - DEPLOYMENT_FAILURE
          - DEPLOYMENT_STOP_ON_REQUEST

  SecurityGroupsInstance:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via 22 and 80 port
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VpcId

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EC2InstanceName
      ImageId: !Ref ImagesId
      InstanceType: !Ref InstanceTypes
      KeyName: !Ref KeyNames
      SecurityGroupIds:
        - !Ref SecurityGroupsInstance
      SubnetId: !Ref Subnets
      IamInstanceProfile:
        Ref: Ec2InstanceProfile
      UserData:
        "Fn::Base64": !Sub |
          #!/bin/bash
          sudo apt-get update
          sudo apt-get install -y ruby wget
          sudo apt-get install -y docker.io
          cd /home/ubuntu
          wget https://aws-codedeploy-us-east-1.s3.us-east-1.amazonaws.com/latest/install
          chmod +x ./install
          sudo ./install auto
          sudo service codedeploy-agent start
          sudo systemctl start docker

  CodeDeployS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled

  BuildArtifactBucket:
    Type: AWS::S3::Bucket

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref CodePipelineName
      ArtifactStore:
        Location: !Ref BuildArtifactBucket
        Type: S3
      RoleArn: !GetAtt CloudFormationCodePipelineServiceRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: S3
              Configuration:
                S3Bucket: !Ref BucketName
                S3ObjectKey: !Ref BucketRevisionLocation
              OutputArtifacts:
                - Name: MyApp
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CodeDeploy
              Configuration:
                ApplicationName: !Ref CodeDeployApplicationName
                DeploymentGroupName: !Ref CodeDeployGroupName
              InputArtifacts:
                - Name: MyApp
              RunOrder: 2
