name: deploy dotNet app to s3

on:
  push:
    branches: ["master", "develop"]

env:
  BUCKET_NAME: "codedeploy-solution-busket"
  AWS_REGION: "us-east-1"
  ROLE: "arn:aws:iam::749559872087:role/github-action-role"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      # - name: Test
      #   run: dotnet test --no-build --verbosity normal

  S3PackageUpload:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read # This is required for actions/checkout
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.ROLE }}
          role-session-name: samplerolesession
          aws-region: ${{ env.AWS_REGION }}
      # Upload a file to AWS s3
      - name: Install zip dependencies
        run: sudo apt-get install -y zip
      - name: Zip project files
        run: zip -r project.zip .
      - name: Upload to S3
        run: aws s3 cp project.zip s3://${{ env.BUCKET_NAME }}/target/project.zip

      #- name: Copy TestCodedeploy to s3
      #  run: |
      #    aws s3 cp . s3://${{ env.BUCKET_NAME }}/target --recursive --exclude ".git/*"

  # deploy:
  #   needs: S3PackageUpload
  #   runs-on: ubuntu-latest
  #   permissions:
  #     id-token: write
  #     contents: read
  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: aws-actions/configure-aws-credentials@v1
  #     with:
  #       role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
  #       role-session-name: GitHub-Action-Role
  #       aws-region: ${{ env.AWS_REGION }}
  #   - run: |
  #       echo "Deploying branch ${{ env.GITHUB_REF }} to ${{ github.event.inputs.environment }}"
  #       commit_hash=`git rev-parse HEAD`
  #       aws deploy create-deployment --application-name CodeDeployAppNameWithASG --deployment-group-name CodeDeployGroupName --github-location repository=$GITHUB_REPOSITORY,commitId=$commit_hash --ignore-application-stop-failures
